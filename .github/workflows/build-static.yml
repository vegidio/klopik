name: build-static

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build-darwin:
    runs-on: macos-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.1'

      - name: Create static library
        working-directory: golang
        run: |
          GOOS=darwin GOARCH=amd64 CGO_ENABLED=1 go build -buildmode=c-archive -o lib/klopik_darwin_amd64.a .
          zip -j -9 lib/klopik_darwin_amd64.zip lib/klopik_darwin_amd64.*

          GOOS=darwin GOARCH=arm64 CGO_ENABLED=1 go build -buildmode=c-archive -o lib/klopik_darwin_arm64.a .
          zip -j -9 lib/klopik_darwin_arm64.zip lib/klopik_darwin_arm64.*

      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lib-darwin
          path: golang/lib/*.zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.1'

      - name: Install dependencies
        run: |
          sudo apt install -y gcc-aarch64-linux-gnu

      - name: Create static library
        working-directory: golang
        run: |
          GOOS=linux GOARCH=amd64 CGO_ENABLED=1 go build -buildmode=c-archive -o lib/klopik_linux_amd64.a .
          zip -j -9 lib/klopik_linux_amd64.zip lib/klopik_linux_amd64.*

          GOOS=linux GOARCH=arm64 CC=aarch64-linux-gnu-gcc CGO_ENABLED=1 go build -buildmode=c-archive -o lib/klopik_linux_arm64.a .
          zip -j -9 lib/klopik_linux_arm64.zip lib/klopik_linux_arm64.*

      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lib-linux
          path: golang/lib/*.zip

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.1'

      - name: Create static library
        working-directory: golang
        run: |
          set GOARCH=amd64
          set GOOS=windows
          set CGO_ENABLED=1
          go build -buildmode=c-archive -o lib/klopik_windows_amd64.a .
          Compress-Archive -Path lib/klopik_windows_amd64.* -DestinationPath lib/klopik_windows_amd64.zip

      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lib-windows
          path: golang/lib/*.zip

  release:
    runs-on: ubuntu-latest
    needs: [build-darwin, build-linux, build-windows]
    permissions:
      contents: write
    steps:
      # The `fetch-depth: 0` is important to fetch all the tags
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Fetch artifact
        uses: actions/download-artifact@v4

      - name: Creating the ChangeLog
        run: |
          echo "Changes in this release:" > changelog.md
          git log $(git describe --tags --abbrev=0 \
            $(git rev-list --tags --skip=1 --max-count=1))..HEAD --oneline \
            --pretty=format:"- %s" >> changelog.md

      - uses: ncipollo/release-action@v1
        with:
          name: ${{ env.VERSION }}
          tag: ${{ env.VERSION }}
          bodyFile: changelog.md
          replacesArtifacts: true
          artifacts: "lib-*/*.zip"